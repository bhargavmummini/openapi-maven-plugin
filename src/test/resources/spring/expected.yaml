openapi: 3.0.1
info:
  title: OpenAPI Maven Plugin Sample
  description: This is a sample.
  termsOfService: https://github.com/youengineering/openapi-maven-plugin
  contact:
    name: Carl KÃ¼sters
    url: https://github.com/carlkuesters
    email: carl.kuesters@youengineering.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v1
servers:
  - url: https://www.example.com:8080/api
paths:
  /mapping/post:
    post:
      operationId: TestMappingController_testPost_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRequestBody'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                  inner:
                    $ref: '#/components/schemas/TestInnerResponse'
  /mapping/get:
    get:
      operationId: TestMappingController_testGet_get
      parameters:
        - name: myAutoNamedParameter
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
  /array/primitiveArrayWithoutAnnotations:
    get:
      operationId: TestArrayController_testPrimitiveArrayWithoutAnnotations_get
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  type: integer
                  format: int32
  /array/boxedArrayWithoutAnnotations:
    get:
      operationId: TestArrayController_testBoxedArrayWithoutAnnotations_get
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  type: integer
                  format: int32
  /array/objectArrayWithoutAnnotations:
    get:
      operationId: TestArrayController_testObjectArrayWithoutAnnotations_get
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  type: object
                  properties:
                    text:
                      type: string
                    inner:
                      $ref: '#/components/schemas/TestInnerResponse'
  /array/boxedListWithoutAnnotations:
    get:
      operationId: TestArrayController_testBoxedListWithoutAnnotations_get
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  type: number
                  format: float
  /array/objectListWithoutAnnotations:
    get:
      operationId: TestArrayController_testObjectListWithoutAnnotations_get
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  type: object
                  properties:
                    text:
                      type: string
                    inner:
                      $ref: '#/components/schemas/TestInnerResponse'
  /array/boxedSetWithoutAnnotations:
    get:
      operationId: TestArrayController_testBoxedSetWithoutAnnotations_get
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: number
                  format: double
  /array/objectSetWithoutAnnotations:
    get:
      operationId: TestArrayController_testObjectSetWithoutAnnotations_get
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  type: object
                  properties:
                    text:
                      type: string
                    inner:
                      $ref: '#/components/schemas/TestInnerResponse'
  /array/listWithAnnotationApiResponses:
    get:
      operationId: TestArrayController_testListWithAnnotationApiResponses_get
      responses:
        "200":
          description: ""
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    text:
                      type: string
                    inner:
                      $ref: '#/components/schemas/TestInnerResponse'
  /deprecated/operationAnnotationJava:
    post:
      operationId: TestDeprecated_testDeprecatedOperationAnnotationJava_post
      responses:
        default:
          description: successful operation
      deprecated: true
  /deprecated/operationAnnotationOpenAPI:
    post:
      operationId: TestDeprecated_testDeprecatedOperationAnnotationOpenAPI_post
      responses:
        default:
          description: successful operation
      deprecated: true
  /deprecated/parameterAnnotationJava:
    post:
      operationId: TestDeprecated_testDeprecatedParameterAnnotationJava_post
      parameters:
        - name: text
          in: query
          required: true
          deprecated: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
  /deprecated/parameterAnnotationOpenAPI:
    post:
      operationId: TestDeprecated_testDeprecatedParameterAnnotation_post
      parameters:
        - name: text
          in: query
          required: true
          deprecated: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
  /deprecated/apiResponseHeaderAnnotation:
    post:
      operationId: TestDeprecated_testDeprecatedApiResponseHeaderAnnotation_post
      responses:
        "200":
          description: ""
          headers:
            myHeader:
              required: false
              deprecated: true
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: string
      deprecated: false
  /parameters/annotationOperationParameter:
    post:
      operationId: TestParametersController_testAnnotationOperationParameter_post
      parameters:
        - name: myName
          in: header
          description: myDescription
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
          schema:
            type: string
      responses:
        default:
          description: successful operation
      deprecated: false
  /responses/annotationOperation:
    get:
      operationId: TestResponsesController_testAnnotationOperation_get
      responses:
        "200":
          description: ""
          content:
            '*/*':
              schema:
                type: object
                properties:
                  text:
                    type: string
                  inner:
                    $ref: '#/components/schemas/TestInnerResponse'
      deprecated: false
  /responses/annotationApiResponses:
    get:
      operationId: TestResponsesController_testAnnotationApiResponses_get
      responses:
        "200":
          description: ""
          content:
            '*/*':
              schema:
                type: object
                properties:
                  text:
                    type: string
                  inner:
                    $ref: '#/components/schemas/TestInnerResponse'
  /echo/requestParamExpectParameterName:
    get:
      operationId: TestEchoController_requestParamExpectParameterName_get
      parameters:
        - name: parameterName
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      deprecated: false
  /echo/requestParamExpectParamName:
    get:
      operationId: TestEchoController_requestParamExpectParamName_get
      parameters:
        - name: requestParamName
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      deprecated: false
  /echo/requestParamExpectParamValue:
    get:
      operationId: TestEchoController_requestParamExpectParamValue_get
      parameters:
        - name: requestParamValue
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      deprecated: false
  /echo/requestHeaderExpectParameterName:
    get:
      operationId: TestEchoController_requestHeaderExpectParameterName_get
      parameters:
        - name: parameterName
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      deprecated: false
  /echo/requestHeaderExpectHeaderName:
    get:
      operationId: TestEchoController_requestHeaderExpectHeaderName_get
      parameters:
        - name: requestHeaderName
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      deprecated: false
  /echo/requestHeaderExpectHeaderValue:
    get:
      operationId: TestEchoController_requestHeaderExpectHeaderValue_get
      parameters:
        - name: requestHeaderValue
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      deprecated: false
  /echo/cookieValueExpectParameterName:
    get:
      operationId: TestEchoController_cookieValueExpectParameterName_get
      parameters:
        - name: parameterName
          in: cookie
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      deprecated: false
  /echo/cookieValueExpectCookieName:
    get:
      operationId: TestEchoController_cookieValueExpectCookieName_get
      parameters:
        - name: cookieValueName
          in: cookie
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      deprecated: false
  /echo/cookieValueExpectCookieValue:
    get:
      operationId: TestEchoController_cookieValueExpectCookieValue_get
      parameters:
        - name: cookieValueValue
          in: cookie
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      deprecated: false
  /echo/pathVariableExpectParameterName/{parameterName}:
    get:
      operationId: TestEchoController_pathVariableExpectParameterName_get
      parameters:
        - name: parameterName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      deprecated: false
  /echo/pathVariableExpectVariableName/{pathVariableName}:
    get:
      operationId: TestEchoController_pathVariableExpectVariableName_get
      parameters:
        - name: pathVariableName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      deprecated: false
  /echo/pathVariableExpectVariableValue/{pathVariableValue}:
    get:
      operationId: TestEchoController_pathVariableExpectVariableValue_get
      parameters:
        - name: pathVariableValue
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
      deprecated: false
components:
  schemas:
    TestRequestBody:
      type: object
      properties:
        number:
          type: integer
          format: int32
        text:
          type: string
    TestInnerResponse:
      type: object
      properties:
        number:
          type: integer
          format: int32
    TestResponse:
      type: object
      properties:
        text:
          type: string
        inner:
          $ref: '#/components/schemas/TestInnerResponse'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://example.com/api/oauth/dialog
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
        authorizationCode:
          authorizationUrl: https://example.com/api/oauth/dialog
          tokenUrl: https://example.com/api/oauth/token
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
