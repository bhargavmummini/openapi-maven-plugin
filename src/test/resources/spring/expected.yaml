openapi: 3.0.1
info:
  title: OpenAPI Maven Plugin Sample
  description: This is a sample.
  termsOfService: https://github.com/carlkuesters/openapi-maven-plugin
  contact:
    name: Carl KÃ¼sters
    url: https://github.com/carlkuesters
    email: carl.kuesters@youengineering.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v1
servers:
  - url: https://www.example.com:8080/api
paths:
  /echo/pathVariableExpectParameterName/{parameterName}:
    get:
      summary: ""
      description: ""
      operationId: TestController_pathVariableExpectParameterName_get
      parameters:
        - name: parameterName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security: []
  /echo/pathVariableExpectVariableName/{pathVariableName}:
    get:
      summary: ""
      description: ""
      operationId: TestController_pathVariableExpectVariableName_get
      parameters:
        - name: pathVariableName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security: []
  /echo/pathVariableExpectVariableValue/{pathVariableValue}:
    get:
      summary: ""
      description: ""
      operationId: TestController_pathVariableExpectVariableValue_get
      parameters:
        - name: pathVariableValue
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security: []
  /echo/requestParamExpectParameterName:
    get:
      summary: ""
      description: ""
      operationId: TestController_requestParamExpectParameterName_get
      parameters:
        - name: parameterName
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security: []
  /echo/requestParamExpectParamName:
    get:
      summary: ""
      description: ""
      operationId: TestController_requestParamExpectParamName_get
      parameters:
        - name: requestParamName
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security: []
  /echo/requestParamExpectParamValue:
    get:
      summary: ""
      description: ""
      operationId: TestController_requestParamExpectParamValue_get
      parameters:
        - name: requestParamValue
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security: []
  /echo/requestHeaderExpectParameterName:
    get:
      summary: ""
      description: ""
      operationId: TestController_requestHeaderExpectParameterName_get
      parameters:
        - name: parameterName
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security: []
  /echo/requestHeaderExpectHeaderName:
    get:
      summary: ""
      description: ""
      operationId: TestController_requestHeaderExpectHeaderName_get
      parameters:
        - name: requestHeaderName
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security: []
  /echo/requestHeaderExpectHeaderValue:
    get:
      summary: ""
      description: ""
      operationId: TestController_requestHeaderExpectHeaderValue_get
      parameters:
        - name: requestHeaderValue
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security: []
  /echo/cookieValueExpectParameterName:
    get:
      summary: ""
      description: ""
      operationId: TestController_cookieValueExpectParameterName_get
      parameters:
        - name: parameterName
          in: cookie
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security: []
  /echo/cookieValueExpectCookieName:
    get:
      summary: ""
      description: ""
      operationId: TestController_cookieValueExpectCookieName_get
      parameters:
        - name: cookieValueName
          in: cookie
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security: []
  /echo/cookieValueExpectCookieValue:
    get:
      summary: ""
      description: ""
      operationId: TestController_cookieValueExpectCookieValue_get
      parameters:
        - name: cookieValueValue
          in: cookie
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      security: []
components:
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://example.com/api/oauth/dialog
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
        authorizationCode:
          authorizationUrl: https://example.com/api/oauth/dialog
          tokenUrl: https://example.com/api/oauth/token
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
